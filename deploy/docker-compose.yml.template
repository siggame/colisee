version: '3'

services:
  runner:
    image: siggame/colisee-runner:latest
    ports:
      - "127.0.0.1:${RUNNER_PORT}:8080/tcp"
    volumes:
      - "./deploy/envs/runner:/app/.env:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${STORAGE_BASE}/runner:/app/output"
  ${GAME_SERVER_HOST}:
    image: siggame/cerveau:arena
    volumes:
      - "${STORAGE_BASE}/game_server:/usr/src/app/game_server/output/gamelogs"
    networks:
      default:
        aliases:
          - ${GAME_SERVER_HOST}
      ${GAME_SERVER_NETWORK}:
        aliases:
          - ${GAME_SERVER_HOST}
  builder:
    image: siggame/colisee-builder:latest
    env_file: ./deploy/envs/builder
    ports:
      - "127.0.0.1:${BUILDER_PORT}:8080/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./deploy/envs/builder:/app/.env:ro"
      - "${STORAGE_BASE}/builder:/app/output"
  api:
    image: siggame/colisee-api:latest
    env_file: ./deploy/envs/api
    ports:
      - "127.0.0.1:${API_PORT}:8080/tcp"
    volumes:
      - "./deploy/envs/api:/app/.env:ro"
      - "${STORAGE_BASE}/game_server:/app/storage/game_server:ro"
      - "${STORAGE_BASE}/runner:/app/storage/runner:ro"
      - "${STORAGE_BASE}/builder:/app/storage/builder:ro"
  matchmaker:
    image: siggame/colisee-matchmaker:latest
    env_file: ./deploy/envs/matchmaker
    ports:
      - "127.0.0.1:${MATCHMAKER_PORT}:8080/tcp"
  tournament:
    image: siggame/colisee-tournament:latest
    env_file: ./deploy/envs/tournament
    ports:
      - "127.0.0.1:${TOURNAMENT_PORT}:8080/tcp"
  registry:
    image: registry:latest
    env_file: ./deploy/envs/registry
    ports:
      - "127.0.0.1:${REGISTRY_PORT}:${REGISTRY_PORT}"
    volumes:
      - "${STORAGE_BASE}/registry:/var/lib/registry"
  ${DB_HOST}:
    image: alpine/socat:latest
    command: tcp-listen:${DB_PORT},fork,reuseaddr tcp:${WEB_ADDR}:${DB_PORT}
  reverse_proxy:
    build:
      context: ./deploy/nginx
    ports:
      - 80:80
      # - 443:443
    # volumes:
      # - "./deploy/letsencrypt/certs:/etc/letsencrypt:ro"
      # - "./deploy/letsencrypt/certs-data:/data/letsencrypt:ro"
networks:
  ${GAME_SERVER_NETWORK}:
    internal: true